<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="noticeMapper">
	
	<resultMap id="noticeResultSet" type="Notice">
		<id property="nId" column="NID"/>
		<result property="nTitle" column="NTITLE"/>
		<result property="nWriter" column="NWRITER"/>
		<result property="nContent" column="NCONTENT"/>
		<result property="nCreateDate" column="N_CREATE_DATE"/>
		<result property="nModifyDate" column="N_MODIFY_DATE"/>
		<result property="filePath" column="FILE_PATH"/>
	</resultMap>
	
	<!-- 공지사항 목록 조회 쿼리 -->
	<select id="selectList" resultMap="noticeResultSet">
		SELECT *
		FROM NOTICE
		ORDER BY N_CREATE_DATE DESC
	</select>
	
	
	<!-- 공지사항 등록 쿼리 -->
	<insert id="insertNotice" parameterType="Notice">
		INSERT INTO NOTICE
		VALUES(SEQ_NID.NEXTVAL, #{nTitle},
				#{nWriter}, #{nContent},
				SYSDATE, SYSDATE, #{filePath}
				)
	</insert>
	
	<!-- 공지사항 상세조회 쿼리 -->
	<select id="selectOne" parameterType="_int" 
			resultMap="noticeResultSet">
		SELECT * 
		FROM NOTICE
		WHERE NID = #{nId}
	</select>
	
	
	<!-- 공지사항 수정용 쿼리 -->
	<update id="updateNotice" parameterType="Notice">
		UPDATE NOTICE
		SET NTITLE=#{nTitle},
			NCONTENT=#{nContent},
			FILE_PATH=#{filePath},
			N_MODIFY_DATE = SYSDATE
		WHERE NID=#{nId}
	</update> 
	
	
	<!-- 공지사항 삭제용 쿼리 -->
	<delete id="deleteNotice" parameterType="_int">
		DELETE FROM NOTICE
		WHERE NID=#{nId}
	</delete>
	
	
	<!-- 공지사항 검색용 쿼리 -->
	<!-- 마이바티스 동적 쿼리 사용 -->
	
	<!-- if 태그 -->
	<!-- <select id="searchList" parameterType="Search"
			resultMap="noticeResultSet">
		SELECT * FROM NOTICE
		<if test="searchCondition == 'title'">
			WHERE NTITLE LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchCondition == 'writer'">
			WHERE NWRITER LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchCondition == 'content'">
			WHERE NCONTENT LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchCondition == 'all'">
			WHERE NWRITER LIKE	'%' || #{searchValue} || '%'	
			OR NTITLE LIKE '%' || #{searchValue} || '%'
			OR NCONTENT LIKE '%' || #{searchValue} || '%'
		</if>
		ORDER BY N_CREATE_DATE DESC	
	</select> -->
	
	
	<!-- bind 태그 : 쿼리문 내에서 사용할 수 있는 변수를 만드는 태그 -->
	<!-- <select id="searchList" parameterType="Search"
			resultMap="noticeResultSet">
		<bind name="sv" 
			value="'%'+ _parameter.getSearchValue() +'%'" />	
			
		SELECT * FROM NOTICE
		<if test="searchCondition == 'title'">
			WHERE NTITLE LIKE #{sv}
		</if>
		<if test="searchCondition == 'writer'">
			WHERE NWRITER LIKE #{sv}
		</if>
		<if test="searchCondition == 'content'">
			WHERE NCONTENT LIKE #{sv}
		</if>
		<if test="searchCondition == 'all'">
			WHERE NWRITER LIKE #{sv}
			OR NTITLE LIKE #{sv}
			OR NCONTENT LIKE #{sv}
		</if>
		ORDER BY N_CREATE_DATE DESC	
	</select> -->
	
	<!-- choose, when, otherwise -->
	<!-- switch문 또는 if-else if-else문  -->
	<!-- <select id="searchList" parameterType="Search"
			resultMap="noticeResultSet">
		<bind name="sv" 
			value="'%'+ _parameter.getSearchValue() +'%'" />	
			
		SELECT * FROM NOTICE
		<choose>
			<when test="searchCondition == 'title'">
				WHERE NTITLE LIKE #{sv}
			</when>
			<when test="searchCondition == 'writer'">
				WHERE NWRITER LIKE #{sv}
			</when>
			<when test="searchCondition == 'content'">
				WHERE NCONTENT LIKE #{sv}
			</when>
			<otherwise>
				WHERE NWRITER LIKE #{sv}
				OR NTITLE LIKE #{sv}
				OR NCONTENT LIKE #{sv}
			</otherwise>
		</choose>
		ORDER BY N_CREATE_DATE DESC	
	</select> -->
	
	
	<!-- where 태그 -->
	<!-- 쿼리문의 where를 대신하는 태그
		 
	 -->
	<select id="searchList" parameterType="Search"
			resultMap="noticeResultSet">
		<bind name="sv" 
			value="'%'+ _parameter.getSearchValue() +'%'" />	
			
		SELECT * FROM NOTICE
		<where>
			<if test="existFile != null">
				FILE_PATH IS NOT NULL
			</if>
			
			<choose>
				<when test="searchCondition == 'title'">
					AND NTITLE LIKE #{sv}
				</when>
				<when test="searchCondition == 'writer'">
					AND NWRITER LIKE #{sv}
				</when>
				<when test="searchCondition == 'content'">
					AND NCONTENT LIKE #{sv}
				</when>
				<otherwise>
					AND (NWRITER LIKE #{sv}
					OR NTITLE LIKE #{sv}
					OR NCONTENT LIKE #{sv})
				</otherwise>
			</choose>
		</where>
		ORDER BY N_CREATE_DATE DESC	
	</select>
</mapper>
